name: Deploy to GitHub Pages

on:
  # 当推送到 main 分支时触发部署
  push:
    branches: [main]

  # 允许手动触发部署
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  deployments: write
  statuses: write
  actions: write
  packages: read

# 只允许一个并发部署，防止多个部署冲突
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.5.2
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') || '' }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build Next.js (静态导出)
        run: |
          echo "开始构建 Next.js 静态产物……"
          pnpm build
          echo "构建完成！"

      - name: Verify Build Output
        run: |
          echo "检查构建输出……"
          if [ -d "dist" ]; then
            echo "✅ dist 文件夹已生成，内容如下："
            ls -la dist
          else
            echo "❌ 未找到 dist 文件夹，构建或导出失败"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 如果 next.config.ts 里设置了 distDir: 'dist'，这里就写 './dist'
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          # 如果需要 PERSONAL ACCESS TOKEN (classic)，则替换为 secrets.PAGES_PAT
          token: ${{ secrets.GITHUB_TOKEN }}
